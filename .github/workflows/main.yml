name: Python application - main

on: 
  push:
    branches: 
      - main

jobs:
  python-demo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repos
      uses: actions/checkout@v3
      with: 
        repository: 'nitin-2137150/project-python-june-24-niting' 
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Coding Standards Check
      run: |
          echo "Code is scanned for the errors"

    - name: Static Code Analysis
      run: |
        echo "Static code analysis are done"

    - name: External Library Vulnerability Analysis
      run: |
        echo "Vulnerability scan results are published"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Code
      run: |
        echo "Jar file is created"
        
    - name: Unit Test
      run: |
        echo "Testing is completed"

    - name: Create Docker Image
      run: |
        echo "Docker image is created"
        # echo ${{ secrets.DEMO_MY_SECRET }} > secret.txt
        # echo ${{ secrets.DEMO_GITHUB_TOKEN }} > token.txt
        # echo ${{ secrets.DEMO_HOSTNAME }} > hostname.txt
        # docker build . -t ${{ secrets.DEMO_HOSTNAME }}/python-app:latest
        # docker login -u ${{ secrets.DEMO_HOSTNAME }} -p ${{ secrets.DEMO_GITHUB_TOKEN }}
        # docker push ${{ secrets.DEMO_HOSTNAME }}/python-app:latest

    - name: Push Docker image
      run: |
        echo "Docker file is pushed to docker registry"

    - name: Scan Docker image for vulneability
      run: |
        echo "Docker image is scanned"

    - name: Deploy to DEV
      run: |
        echo "Deployed to DEV environment"
        # kubectl apply -f deployment.yaml

    - name: Deploy to ST
      run: |
          echo "Deployed to ST environment"
          # kubectl apply -f deployment.yaml

    - name: Deploy to SIT
      run: |
          echo "Deployed to SIT environment"
          # kubectl apply -f deployment.yaml

    - name: Deploy to UAT
      run: |
        echo "Deployed to UAT environment"
        # kubectl apply -f deployment.yaml

    - name: Validate deployment file
      run: |
        echo "Deployment file is validated"  
      # kubectl apply -f deployment.yaml --dry-run=client 

    - name: Check deployment status
      run: |
        echo "Deployment status is ok"
        # kubectl get deployment

    - name: Check pod status
      run: |
        echo "Pod Status is ok"
        # kubectl get pods
    
    - name: Check service status
      run: |
        echo "Service is up and running"
        # kubectl get svc

    - name: Run Twistlock scan
      run: |
        echo "Running Twistlock scan"
        echo "Twistlock scan completed"

    
